/**\n * Nuclear Modal Destroyer - The final solution\n * This will destroy ANY element that looks like a modal\n */\n\n// Execute immediately - no waiting\n(function() {\n    'use strict';\n    \n    console.log('☢️ NUCLEAR MODAL DESTROYER ACTIVATED');\n    \n    function nuclearDestroy() {\n        let destroyed = 0;\n        \n        // Method 1: Find by common modal characteristics\n        const suspects = [];\n        \n        // Get all elements\n        const allElements = document.querySelectorAll('*');\n        \n        allElements.forEach(element => {\n            const rect = element.getBoundingClientRect();\n            const styles = window.getComputedStyle(element);\n            \n            // Check if element looks like a modal\n            const isModal = (\n                // Has modal in class or id\n                (element.className && element.className.toString().toLowerCase().includes('modal')) ||\n                (element.id && element.id.toLowerCase().includes('modal')) ||\n                // Is fixed positioned\n                styles.position === 'fixed' ||\n                // Is large and centered\n                (rect.width > 200 && rect.height > 100 && \n                 rect.left > 100 && rect.top > 100 && \n                 rect.right < window.innerWidth - 100) ||\n                // Has high z-index\n                parseInt(styles.zIndex) > 1000 ||\n                // Has backdrop-like background\n                (styles.backgroundColor.includes('rgba') && \n                 rect.width > window.innerWidth * 0.5 && \n                 rect.height > window.innerHeight * 0.5)\n            );\n            \n            if (isModal) {\n                suspects.push(element);\n            }\n        });\n        \n        // Method 2: Find white boxes with close buttons\n        const whiteBboxes = document.querySelectorAll('div');\n        whiteBboxes.forEach(div => {\n            const styles = window.getComputedStyle(div);\n            const rect = div.getBoundingClientRect();\n            \n            // Look for white/light colored boxes that might be modals\n            if ((styles.backgroundColor === 'white' || \n                 styles.backgroundColor === 'rgb(255, 255, 255)' ||\n                 styles.backgroundColor.includes('255, 255, 255')) &&\n                rect.width > 200 && rect.height > 100 &&\n                (styles.position === 'fixed' || styles.position === 'absolute')) {\n                \n                // Check if it has a close button (X)\n                const hasCloseButton = div.querySelector('button') || \n                                     div.innerHTML.includes('×') || \n                                     div.innerHTML.includes('✕') ||\n                                     div.innerHTML.includes('&times;');\n                \n                if (hasCloseButton) {\n                    suspects.push(div);\n                }\n            }\n        });\n        \n        // Method 3: Find elements with close buttons\n        const closeButtons = document.querySelectorAll('button, span, div');\n        closeButtons.forEach(btn => {\n            if (btn.innerHTML === '×' || btn.innerHTML === '✕' || \n                btn.innerHTML.includes('&times;') || btn.textContent === '×') {\n                // Found a close button, check its parent\n                let parent = btn.parentElement;\n                while (parent && parent !== document.body) {\n                    const styles = window.getComputedStyle(parent);\n                    if (styles.position === 'fixed' || styles.position === 'absolute') {\n                        suspects.push(parent);\n                        break;\n                    }\n                    parent = parent.parentElement;\n                }\n            }\n        });\n        \n        // Destroy all suspects\n        suspects.forEach(element => {\n            if (element && element.parentNode) {\n                console.log('☢️ NUCLEAR DESTRUCTION:', element);\n                \n                // Multiple destruction methods\n                element.style.display = 'none';\n                element.style.visibility = 'hidden';\n                element.style.opacity = '0';\n                element.style.pointerEvents = 'none';\n                element.style.position = 'absolute';\n                element.style.top = '-99999px';\n                element.style.left = '-99999px';\n                element.style.width = '0';\n                element.style.height = '0';\n                element.style.overflow = 'hidden';\n                element.style.zIndex = '-9999';\n                \n                // Try to remove completely\n                try {\n                    element.remove();\n                    destroyed++;\n                } catch (e) {\n                    try {\n                        element.parentNode.removeChild(element);\n                        destroyed++;\n                    } catch (e2) {\n                        // If can't remove, at least hide it\n                        element.innerHTML = '';\n                    }\n                }\n            }\n        });\n        \n        // Clean up body\n        document.body.classList.remove('modal-open', 'modal-active', 'no-scroll');\n        document.body.style.overflow = '';\n        document.body.style.position = '';\n        document.body.style.width = '';\n        \n        if (destroyed > 0) {\n            console.log(`☢️ NUCLEAR DESTRUCTION COMPLETE: ${destroyed} ELEMENTS DESTROYED`);\n        }\n        \n        return destroyed;\n    }\n    \n    // Execute immediately\n    nuclearDestroy();\n    \n    // Execute when DOM is ready\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', nuclearDestroy);\n    }\n    \n    // Execute repeatedly for first 10 seconds\n    let attempts = 0;\n    const destroyer = setInterval(() => {\n        attempts++;\n        const destroyed = nuclearDestroy();\n        \n        if (attempts > 100) { // 10 seconds\n            clearInterval(destroyer);\n            console.log('☢️ NUCLEAR DESTROYER DEACTIVATED AFTER', attempts, 'ATTEMPTS');\n        }\n    }, 100);\n    \n    // Add click handler to destroy anything clicked\n    document.addEventListener('click', function(e) {\n        const element = e.target;\n        const styles = window.getComputedStyle(element);\n        \n        // If clicking on something that looks like a modal, destroy it\n        if (styles.position === 'fixed' || \n            element.className.toString().includes('modal') ||\n            element.innerHTML === '×' || element.textContent === '×') {\n            \n            console.log('☢️ CLICK DESTRUCTION:', element);\n            \n            // Find the modal container\n            let target = element;\n            while (target && target !== document.body) {\n                const targetStyles = window.getComputedStyle(target);\n                if (targetStyles.position === 'fixed' || \n                    target.className.toString().includes('modal')) {\n                    \n                    target.style.display = 'none';\n                    try {\n                        target.remove();\n                    } catch (e) {\n                        target.innerHTML = '';\n                    }\n                    \n                    e.preventDefault();\n                    e.stopPropagation();\n                    break;\n                }\n                target = target.parentElement;\n            }\n        }\n    }, true);\n    \n    console.log('☢️ NUCLEAR MODAL DESTROYER ARMED AND READY');\n    \n})();"