/**
 * Food Database Manager Component
 * Comprehensive food database management with nutrition visualization
 */

class FoodDatabaseManager {
    constructor() {
        this.foods = [];
        this.filteredFoods = [];
        this.currentFood = null;
        this.searchQuery = '';
        this.activeFilters = {
            species: 'all',
            type: 'all',
            brand: 'all',
            life_stage: 'all',
            rating: 0
        };
        this.sortBy = 'name';
        this.sortOrder = 'asc';
        this.init();
    }

    init() {
        this.loadFoodDatabase();
        this.bindEvents();
        this.renderInterface();
    }

    bindEvents() {
        // Search functionality
        document.addEventListener('input', (e) => {
            if (e.target.matches('#food-search-input')) {
                this.searchQuery = e.target.value;
                this.applyFilters();
            }
        });

        // Filter controls
        document.addEventListener('change', (e) => {
            if (e.target.matches('.filter-select')) {
                const filterType = e.target.dataset.filter;
                this.activeFilters[filterType] = e.target.value;
                this.applyFilters();
            }
        });

        // Sort controls
        document.addEventListener('change', (e) => {
            if (e.target.matches('#sort-select')) {
                this.sortBy = e.target.value;
                this.applySorting();
            }
        });

        document.addEventListener('click', (e) => {
            if (e.target.matches('#sort-order-btn')) {
                this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';
                e.target.innerHTML = this.sortOrder === 'asc' ? \n                    '<i class=\"fas fa-sort-alpha-down\"></i>' : \n                    '<i class=\"fas fa-sort-alpha-up\"></i>';\n                this.applySorting();\n            }\n        });\n\n        // Food item actions\n        document.addEventListener('click', (e) => {\n            if (e.target.matches('[data-action=\"view-food\"]')) {\n                const foodId = parseInt(e.target.dataset.foodId);\n                this.viewFoodDetails(foodId);\n            }\n            if (e.target.matches('[data-action=\"edit-food\"]')) {\n                const foodId = parseInt(e.target.dataset.foodId);\n                this.editFood(foodId);\n            }\n            if (e.target.matches('[data-action=\"add-food\"]')) {\n                this.addNewFood();\n            }\n            if (e.target.matches('[data-action=\"delete-food\"]')) {\n                const foodId = parseInt(e.target.dataset.foodId);\n                this.deleteFood(foodId);\n            }\n        });\n\n        // Modal controls\n        document.addEventListener('click', (e) => {\n            if (e.target.matches('.modal-close') || e.target.matches('.modal-overlay')) {\n                this.closeModal();\n            }\n            if (e.target.matches('[data-action=\"save-food\"]')) {\n                this.saveFood();\n            }\n        });\n    }\n\n    async loadFoodDatabase() {\n        // Comprehensive food database with detailed nutritional information\n        this.foods = [\n            {\n                id: 1,\n                name: 'Premium Dry Dog Food',\n                brand: 'Premium Pet',\n                type: 'dry',\n                species: 'dog',\n                life_stage: 'adult',\n                calories_per_cup: 350,\n                calories_per_100g: 380,\n                protein: 26,\n                fat: 16,\n                carbs: 58,\n                fiber: 4,\n                moisture: 10,\n                ash: 8,\n                calcium: 1.2,\n                phosphorus: 1.0,\n                sodium: 0.3,\n                ingredients: ['chicken meal', 'brown rice', 'chicken fat', 'beet pulp', 'fish oil'],\n                allergens: [],\n                rating: 4.5,\n                price_per_lb: 3.50,\n                package_sizes: ['5 lb', '15 lb', '30 lb'],\n                nutritional_adequacy: 'AAFCO Dog Food Nutrient Profiles for Adult Maintenance',\n                feeding_guidelines: {\n                    '5-15 lbs': '1/2 - 1 cup',\n                    '15-30 lbs': '1 - 2 cups',\n                    '30-50 lbs': '2 - 2.5 cups',\n                    '50+ lbs': '2.5 - 3.5 cups'\n                }\n            },\n            {\n                id: 2,\n                name: 'Grain-Free Salmon Dog Food',\n                brand: 'Wild Nature',\n                type: 'dry',\n                species: 'dog',\n                life_stage: 'adult',\n                calories_per_cup: 380,\n                calories_per_100g: 410,\n                protein: 30,\n                fat: 18,\n                carbs: 52,\n                fiber: 5,\n                moisture: 10,\n                ash: 7,\n                calcium: 1.5,\n                phosphorus: 1.2,\n                sodium: 0.4,\n                ingredients: ['deboned salmon', 'sweet potato', 'peas', 'salmon meal', 'canola oil'],\n                allergens: [],\n                rating: 4.7,\n                price_per_lb: 4.20,\n                package_sizes: ['4 lb', '12 lb', '24 lb'],\n                nutritional_adequacy: 'AAFCO Dog Food Nutrient Profiles for Adult Maintenance',\n                feeding_guidelines: {\n                    '5-15 lbs': '1/2 - 1 cup',\n                    '15-30 lbs': '1 - 1.5 cups',\n                    '30-50 lbs': '1.5 - 2.5 cups',\n                    '50+ lbs': '2.5 - 3 cups'\n                }\n            },\n            {\n                id: 3,\n                name: 'Puppy Growth Formula',\n                brand: 'Puppy Pro',\n                type: 'dry',\n                species: 'dog',\n                life_stage: 'puppy',\n                calories_per_cup: 420,\n                calories_per_100g: 450,\n                protein: 32,\n                fat: 22,\n                carbs: 46,\n                fiber: 3,\n                moisture: 10,\n                ash: 9,\n                calcium: 1.8,\n                phosphorus: 1.4,\n                sodium: 0.5,\n                ingredients: ['chicken', 'chicken meal', 'rice', 'fish oil', 'dried egg'],\n                allergens: [],\n                rating: 4.6,\n                price_per_lb: 4.80,\n                package_sizes: ['5 lb', '15 lb', '30 lb'],\n                nutritional_adequacy: 'AAFCO Dog Food Nutrient Profiles for Growth and Reproduction',\n                feeding_guidelines: {\n                    '2-5 lbs': '1/2 - 1 cup',\n                    '5-10 lbs': '1 - 1.5 cups',\n                    '10-20 lbs': '1.5 - 2.5 cups',\n                    '20+ lbs': '2.5 - 4 cups'\n                }\n            },\n            {\n                id: 4,\n                name: 'Premium Indoor Cat Food',\n                brand: 'Feline Premium',\n                type: 'dry',\n                species: 'cat',\n                life_stage: 'adult',\n                calories_per_cup: 400,\n                calories_per_100g: 420,\n                protein: 32,\n                fat: 18,\n                carbs: 50,\n                fiber: 6,\n                moisture: 10,\n                ash: 8,\n                calcium: 1.0,\n                phosphorus: 0.8,\n                sodium: 0.4,\n                taurine: 0.15,\n                ingredients: ['chicken meal', 'rice', 'chicken fat', 'beet pulp', 'taurine'],\n                allergens: [],\n                rating: 4.4,\n                price_per_lb: 4.00,\n                package_sizes: ['3 lb', '7 lb', '16 lb'],\n                nutritional_adequacy: 'AAFCO Cat Food Nutrient Profiles for Adult Maintenance',\n                feeding_guidelines: {\n                    '5-9 lbs': '1/4 - 1/2 cup',\n                    '9-12 lbs': '1/2 - 2/3 cup',\n                    '12+ lbs': '2/3 - 3/4 cup'\n                }\n            },\n            {\n                id: 5,\n                name: 'Wet Cat Food - Salmon Pate',\n                brand: 'Ocean Fresh',\n                type: 'wet',\n                species: 'cat',\n                life_stage: 'adult',\n                calories_per_can: 180,\n                calories_per_100g: 95,\n                protein: 50,\n                fat: 30,\n                carbs: 20,\n                fiber: 1,\n                moisture: 78,\n                ash: 3,\n                calcium: 0.8,\n                phosphorus: 0.7,\n                sodium: 0.3,\n                taurine: 0.2,\n                ingredients: ['salmon', 'salmon broth', 'liver', 'taurine', 'vitamins'],\n                allergens: [],\n                rating: 4.5,\n                price_per_can: 1.80,\n                package_sizes: ['3 oz can', '5.5 oz can'],\n                nutritional_adequacy: 'AAFCO Cat Food Nutrient Profiles for Adult Maintenance',\n                feeding_guidelines: {\n                    '5-9 lbs': '1 - 1.5 cans',\n                    '9-12 lbs': '1.5 - 2 cans',\n                    '12+ lbs': '2 - 2.5 cans'\n                }\n            },\n            {\n                id: 6,\n                name: 'Kitten Growth Formula',\n                brand: 'Kitten Care',\n                type: 'wet',\n                species: 'cat',\n                life_stage: 'kitten',\n                calories_per_can: 220,\n                calories_per_100g: 110,\n                protein: 55,\n                fat: 35,\n                carbs: 10,\n                fiber: 1,\n                moisture: 75,\n                ash: 4,\n                calcium: 1.2,\n                phosphorus: 1.0,\n                sodium: 0.4,\n                taurine: 0.25,\n                ingredients: ['chicken', 'chicken broth', 'liver', 'milk', 'taurine'],\n                allergens: [],\n                rating: 4.7,\n                price_per_can: 2.20,\n                package_sizes: ['3 oz can', '5.5 oz can'],\n                nutritional_adequacy: 'AAFCO Cat Food Nutrient Profiles for Growth and Reproduction',\n                feeding_guidelines: {\n                    '1-3 lbs': '1 - 2 cans',\n                    '3-5 lbs': '2 - 3 cans',\n                    '5+ lbs': '3 - 4 cans'\n                }\n            }\n        ];\n        \n        this.filteredFoods = [...this.foods];\n    }\n\n    renderInterface() {\n        const container = document.getElementById('food-database-container');\n        if (!container) return;\n        \n        container.innerHTML = `\n            <div class=\"food-database-manager\">\n                <div class=\"database-header\">\n                    <h2><i class=\"fas fa-database\"></i> Food Database Manager</h2>\n                    <p>Manage comprehensive nutritional information for pet foods</p>\n                </div>\n\n                <div class=\"database-controls\">\n                    <div class=\"search-section\">\n                        <div class=\"search-input-group\">\n                            <input type=\"text\" id=\"food-search-input\" placeholder=\"Search foods by name, brand, or ingredient...\" class=\"search-input\">\n                            <i class=\"fas fa-search search-icon\"></i>\n                        </div>\n                    </div>\n\n                    <div class=\"filter-section\">\n                        <div class=\"filter-group\">\n                            <label>Species:</label>\n                            <select class=\"filter-select\" data-filter=\"species\">\n                                <option value=\"all\">All Species</option>\n                                <option value=\"dog\">Dogs</option>\n                                <option value=\"cat\">Cats</option>\n                            </select>\n                        </div>\n                        \n                        <div class=\"filter-group\">\n                            <label>Type:</label>\n                            <select class=\"filter-select\" data-filter=\"type\">\n                                <option value=\"all\">All Types</option>\n                                <option value=\"dry\">Dry Food</option>\n                                <option value=\"wet\">Wet Food</option>\n                                <option value=\"raw\">Raw Food</option>\n                                <option value=\"treat\">Treats</option>\n                            </select>\n                        </div>\n                        \n                        <div class=\"filter-group\">\n                            <label>Life Stage:</label>\n                            <select class=\"filter-select\" data-filter=\"life_stage\">\n                                <option value=\"all\">All Stages</option>\n                                <option value=\"puppy\">Puppy</option>\n                                <option value=\"kitten\">Kitten</option>\n                                <option value=\"adult\">Adult</option>\n                                <option value=\"senior\">Senior</option>\n                            </select>\n                        </div>\n                        \n                        <div class=\"filter-group\">\n                            <label>Min Rating:</label>\n                            <select class=\"filter-select\" data-filter=\"rating\">\n                                <option value=\"0\">Any Rating</option>\n                                <option value=\"3\">3+ Stars</option>\n                                <option value=\"4\">4+ Stars</option>\n                                <option value=\"4.5\">4.5+ Stars</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class=\"sort-section\">\n                        <div class=\"sort-group\">\n                            <label>Sort by:</label>\n                            <select id=\"sort-select\">\n                                <option value=\"name\">Name</option>\n                                <option value=\"brand\">Brand</option>\n                                <option value=\"rating\">Rating</option>\n                                <option value=\"protein\">Protein %</option>\n                                <option value=\"price_per_lb\">Price</option>\n                            </select>\n                            <button id=\"sort-order-btn\" class=\"sort-order-btn\">\n                                <i class=\"fas fa-sort-alpha-down\"></i>\n                            </button>\n                        </div>\n                        \n                        <button class=\"btn btn-primary\" data-action=\"add-food\">\n                            <i class=\"fas fa-plus\"></i> Add New Food\n                        </button>\n                    </div>\n                </div>\n\n                <div class=\"database-stats\">\n                    <div class=\"stat-item\">\n                        <span class=\"stat-value\" id=\"total-foods\">${this.foods.length}</span>\n                        <span class=\"stat-label\">Total Foods</span>\n                    </div>\n                    <div class=\"stat-item\">\n                        <span class=\"stat-value\" id=\"filtered-foods\">${this.filteredFoods.length}</span>\n                        <span class=\"stat-label\">Showing</span>\n                    </div>\n                    <div class=\"stat-item\">\n                        <span class=\"stat-value\" id=\"avg-rating\">${this.calculateAverageRating()}</span>\n                        <span class=\"stat-label\">Avg Rating</span>\n                    </div>\n                </div>\n\n                <div class=\"food-grid\" id=\"food-grid\">\n                    ${this.renderFoodGrid()}\n                </div>\n            </div>\n        `;\n    }\n\n    renderFoodGrid() {\n        if (this.filteredFoods.length === 0) {\n            return `\n                <div class=\"no-results\">\n                    <i class=\"fas fa-search\"></i>\n                    <h3>No foods found</h3>\n                    <p>Try adjusting your search criteria or filters</p>\n                </div>\n            `;\n        }\n\n        return this.filteredFoods.map(food => `\n            <div class=\"food-card\" data-food-id=\"${food.id}\">\n                <div class=\"food-card-header\">\n                    <div class=\"food-type-badge ${food.type}\">\n                        <i class=\"fas fa-${this.getFoodIcon(food.type)}\"></i>\n                        ${food.type.toUpperCase()}\n                    </div>\n                    <div class=\"food-rating\">\n                        ${this.renderStars(food.rating)} ${food.rating}\n                    </div>\n                </div>\n                \n                <div class=\"food-card-body\">\n                    <h3 class=\"food-name\">${food.name}</h3>\n                    <p class=\"food-brand\">${food.brand}</p>\n                    <p class=\"food-species\">${food.species.toUpperCase()} • ${food.life_stage.toUpperCase()}</p>\n                    \n                    <div class=\"nutrition-preview\">\n                        <div class=\"macro-bar\">\n                            <div class=\"macro-segment protein\" style=\"width: ${food.protein}%\" title=\"Protein: ${food.protein}%\"></div>\n                            <div class=\"macro-segment fat\" style=\"width: ${food.fat}%\" title=\"Fat: ${food.fat}%\"></div>\n                            <div class=\"macro-segment carbs\" style=\"width: ${food.carbs}%\" title=\"Carbs: ${food.carbs}%\"></div>\n                        </div>\n                        <div class=\"macro-labels\">\n                            <span class=\"protein-label\">P: ${food.protein}%</span>\n                            <span class=\"fat-label\">F: ${food.fat}%</span>\n                            <span class=\"carbs-label\">C: ${food.carbs}%</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"calorie-info\">\n                        <strong>${this.getCalorieDisplay(food)}</strong>\n                    </div>\n                </div>\n                \n                <div class=\"food-card-actions\">\n                    <button class=\"btn btn-sm btn-outline\" data-action=\"view-food\" data-food-id=\"${food.id}\">\n                        <i class=\"fas fa-eye\"></i> View\n                    </button>\n                    <button class=\"btn btn-sm btn-primary\" data-action=\"edit-food\" data-food-id=\"${food.id}\">\n                        <i class=\"fas fa-edit\"></i> Edit\n                    </button>\n                    <button class=\"btn btn-sm btn-danger\" data-action=\"delete-food\" data-food-id=\"${food.id}\">\n                        <i class=\"fas fa-trash\"></i>\n                    </button>\n                </div>\n            </div>\n        `).join('');\n    }\n\n    applyFilters() {\n        this.filteredFoods = this.foods.filter(food => {\n            // Search query filter\n            if (this.searchQuery) {\n                const query = this.searchQuery.toLowerCase();\n                const searchableText = [\n                    food.name,\n                    food.brand,\n                    ...food.ingredients\n                ].join(' ').toLowerCase();\n                \n                if (!searchableText.includes(query)) {\n                    return false;\n                }\n            }\n            \n            // Species filter\n            if (this.activeFilters.species !== 'all' && food.species !== this.activeFilters.species) {\n                return false;\n            }\n            \n            // Type filter\n            if (this.activeFilters.type !== 'all' && food.type !== this.activeFilters.type) {\n                return false;\n            }\n            \n            // Life stage filter\n            if (this.activeFilters.life_stage !== 'all' && food.life_stage !== this.activeFilters.life_stage) {\n                return false;\n            }\n            \n            // Rating filter\n            if (this.activeFilters.rating > 0 && food.rating < this.activeFilters.rating) {\n                return false;\n            }\n            \n            return true;\n        });\n        \n        this.applySorting();\n        this.updateDisplay();\n    }\n\n    applySorting() {\n        this.filteredFoods.sort((a, b) => {\n            let aValue = a[this.sortBy];\n            let bValue = b[this.sortBy];\n            \n            // Handle special cases\n            if (this.sortBy === 'price_per_lb' || this.sortBy === 'price_per_can') {\n                aValue = a.price_per_lb || a.price_per_can || 0;\n                bValue = b.price_per_lb || b.price_per_can || 0;\n            }\n            \n            if (typeof aValue === 'string') {\n                aValue = aValue.toLowerCase();\n                bValue = bValue.toLowerCase();\n            }\n            \n            let comparison = 0;\n            if (aValue < bValue) comparison = -1;\n            if (aValue > bValue) comparison = 1;\n            \n            return this.sortOrder === 'asc' ? comparison : -comparison;\n        });\n    }\n\n    updateDisplay() {\n        const foodGrid = document.getElementById('food-grid');\n        if (foodGrid) {\n            foodGrid.innerHTML = this.renderFoodGrid();\n        }\n        \n        // Update stats\n        const filteredCount = document.getElementById('filtered-foods');\n        if (filteredCount) {\n            filteredCount.textContent = this.filteredFoods.length;\n        }\n    }\n\n    viewFoodDetails(foodId) {\n        const food = this.foods.find(f => f.id === foodId);\n        if (!food) return;\n        \n        this.currentFood = food;\n        this.showFoodDetailsModal(food);\n    }\n\n    showFoodDetailsModal(food) {\n        const modal = document.createElement('div');\n        modal.className = 'modal-overlay';\n        modal.innerHTML = `\n            <div class=\"modal-content food-details-modal\">\n                <div class=\"modal-header\">\n                    <h3><i class=\"fas fa-info-circle\"></i> ${food.name}</h3>\n                    <button class=\"modal-close\">&times;</button>\n                </div>\n                <div class=\"modal-body\">\n                    ${this.renderNutritionLabel(food)}\n                </div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-primary\" data-action=\"edit-food\" data-food-id=\"${food.id}\">Edit Food</button>\n                    <button class=\"btn btn-outline modal-close\">Close</button>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n    }\n\n    renderNutritionLabel(food) {\n        return `\n            <div class=\"nutrition-label\">\n                <div class=\"nutrition-header\">\n                    <h2>Nutrition Facts</h2>\n                    <div class=\"serving-info\">\n                        <div class=\"serving-size\">Serving Size: ${this.getServingSize(food)}</div>\n                        <div class=\"calories-per-serving\">Calories: ${this.getCaloriesPerServing(food)}</div>\n                    </div>\n                </div>\n                \n                <div class=\"nutrition-content\">\n                    <div class=\"daily-value-header\">\n                        <strong>% Daily Value*</strong>\n                    </div>\n                    \n                    <div class=\"nutrient-row major\">\n                        <span class=\"nutrient-name\">Crude Protein</span>\n                        <span class=\"nutrient-amount\">${food.protein}%</span>\n                        <span class=\"daily-value\">${this.calculateDailyValue('protein', food.protein, food.species)}%</span>\n                    </div>\n                    \n                    <div class=\"nutrient-row major\">\n                        <span class=\"nutrient-name\">Crude Fat</span>\n                        <span class=\"nutrient-amount\">${food.fat}%</span>\n                        <span class=\"daily-value\">${this.calculateDailyValue('fat', food.fat, food.species)}%</span>\n                    </div>\n                    \n                    <div class=\"nutrient-row major\">\n                        <span class=\"nutrient-name\">Crude Fiber</span>\n                        <span class=\"nutrient-amount\">${food.fiber}%</span>\n                        <span class=\"daily-value\">${this.calculateDailyValue('fiber', food.fiber, food.species)}%</span>\n                    </div>\n                    \n                    <div class=\"nutrient-row\">\n                        <span class=\"nutrient-name\">Moisture</span>\n                        <span class=\"nutrient-amount\">${food.moisture}%</span>\n                        <span class=\"daily-value\">-</span>\n                    </div>\n                    \n                    <div class=\"nutrient-row\">\n                        <span class=\"nutrient-name\">Ash</span>\n                        <span class=\"nutrient-amount\">${food.ash}%</span>\n                        <span class=\"daily-value\">-</span>\n                    </div>\n                    \n                    <div class=\"nutrient-divider\"></div>\n                    \n                    <div class=\"nutrient-row\">\n                        <span class=\"nutrient-name\">Calcium</span>\n                        <span class=\"nutrient-amount\">${food.calcium}%</span>\n                        <span class=\"daily-value\">${this.calculateDailyValue('calcium', food.calcium, food.species)}%</span>\n                    </div>\n                    \n                    <div class=\"nutrient-row\">\n                        <span class=\"nutrient-name\">Phosphorus</span>\n                        <span class=\"nutrient-amount\">${food.phosphorus}%</span>\n                        <span class=\"daily-value\">${this.calculateDailyValue('phosphorus', food.phosphorus, food.species)}%</span>\n                    </div>\n                    \n                    <div class=\"nutrient-row\">\n                        <span class=\"nutrient-name\">Sodium</span>\n                        <span class=\"nutrient-amount\">${food.sodium}%</span>\n                        <span class=\"daily-value\">${this.calculateDailyValue('sodium', food.sodium, food.species)}%</span>\n                    </div>\n                    \n                    ${food.taurine ? `\n                        <div class=\"nutrient-row\">\n                            <span class=\"nutrient-name\">Taurine</span>\n                            <span class=\"nutrient-amount\">${food.taurine}%</span>\n                            <span class=\"daily-value\">${this.calculateDailyValue('taurine', food.taurine, food.species)}%</span>\n                        </div>\n                    ` : ''}\n                </div>\n                \n                <div class=\"nutrition-footer\">\n                    <p><small>*Daily Values are based on AAFCO nutrient profiles for ${food.species}s</small></p>\n                    <p><small>Nutritional Adequacy: ${food.nutritional_adequacy}</small></p>\n                </div>\n            </div>\n            \n            <div class=\"food-details-sections\">\n                <div class=\"ingredients-section\">\n                    <h4><i class=\"fas fa-list\"></i> Ingredients</h4>\n                    <div class=\"ingredients-list\">\n                        ${food.ingredients.map((ingredient, index) => \n                            `<span class=\"ingredient-tag ${index === 0 ? 'primary' : ''}\">${ingredient}</span>`\n                        ).join('')}\n                    </div>\n                </div>\n                \n                <div class=\"feeding-guidelines-section\">\n                    <h4><i class=\"fas fa-utensils\"></i> Feeding Guidelines</h4>\n                    <div class=\"feeding-table\">\n                        ${Object.entries(food.feeding_guidelines).map(([weight, amount]) => `\n                            <div class=\"feeding-row\">\n                                <span class=\"weight-range\">${weight}</span>\n                                <span class=\"feeding-amount\">${amount}</span>\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n                \n                <div class=\"product-info-section\">\n                    <h4><i class=\"fas fa-info\"></i> Product Information</h4>\n                    <div class=\"product-info-grid\">\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Brand:</span>\n                            <span class=\"info-value\">${food.brand}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Type:</span>\n                            <span class=\"info-value\">${food.type.charAt(0).toUpperCase() + food.type.slice(1)}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Life Stage:</span>\n                            <span class=\"info-value\">${food.life_stage.charAt(0).toUpperCase() + food.life_stage.slice(1)}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Rating:</span>\n                            <span class=\"info-value\">${this.renderStars(food.rating)} ${food.rating}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Price:</span>\n                            <span class=\"info-value\">$${food.price_per_lb || food.price_per_can}/${food.price_per_lb ? 'lb' : 'can'}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Package Sizes:</span>\n                            <span class=\"info-value\">${food.package_sizes.join(', ')}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n\n    // Helper methods\n    getFoodIcon(type) {\n        const icons = {\n            'dry': 'bowl-food',\n            'wet': 'can-food',\n            'raw': 'drumstick-bite',\n            'treat': 'cookie-bite'\n        };\n        return icons[type] || 'utensils';\n    }\n\n    renderStars(rating) {\n        const fullStars = Math.floor(rating);\n        const hasHalfStar = rating % 1 >= 0.5;\n        const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n        \n        return '★'.repeat(fullStars) + \n               (hasHalfStar ? '☆' : '') + \n               '☆'.repeat(emptyStars);\n    }\n\n    getCalorieDisplay(food) {\n        if (food.calories_per_cup) return `${food.calories_per_cup} kcal/cup`;\n        if (food.calories_per_can) return `${food.calories_per_can} kcal/can`;\n        if (food.calories_per_100g) return `${food.calories_per_100g} kcal/100g`;\n        return 'Calories vary';\n    }\n\n    getServingSize(food) {\n        if (food.type === 'dry') return '1 cup (varies by brand)';\n        if (food.type === 'wet') return '1 can (3-5.5 oz)';\n        return '100g';\n    }\n\n    getCaloriesPerServing(food) {\n        if (food.calories_per_cup) return food.calories_per_cup;\n        if (food.calories_per_can) return food.calories_per_can;\n        if (food.calories_per_100g) return food.calories_per_100g;\n        return 'Varies';\n    }\n\n    calculateDailyValue(nutrient, value, species) {\n        // AAFCO minimum requirements (simplified)\n        const requirements = {\n            dog: {\n                protein: 18,\n                fat: 5.5,\n                fiber: 4,\n                calcium: 0.6,\n                phosphorus: 0.5,\n                sodium: 0.06\n            },\n            cat: {\n                protein: 26,\n                fat: 9,\n                fiber: 4,\n                calcium: 0.6,\n                phosphorus: 0.5,\n                sodium: 0.2,\n                taurine: 0.1\n            }\n        };\n        \n        const requirement = requirements[species]?.[nutrient];\n        if (!requirement) return '-';\n        \n        return Math.round((value / requirement) * 100);\n    }\n\n    calculateAverageRating() {\n        if (this.foods.length === 0) return '0.0';\n        const sum = this.foods.reduce((acc, food) => acc + food.rating, 0);\n        return (sum / this.foods.length).toFixed(1);\n    }\n\n    closeModal() {\n        const modal = document.querySelector('.modal-overlay');\n        if (modal) {\n            modal.remove();\n        }\n    }\n\n    // Placeholder methods for future implementation\n    addNewFood() {\n        console.log('Add new food functionality - to be implemented');\n    }\n\n    editFood(foodId) {\n        console.log('Edit food functionality - to be implemented', foodId);\n    }\n\n    deleteFood(foodId) {\n        if (confirm('Are you sure you want to delete this food item?')) {\n            this.foods = this.foods.filter(f => f.id !== foodId);\n            this.applyFilters();\n        }\n    }\n\n    saveFood() {\n        console.log('Save food functionality - to be implemented');\n    }\n}\n\n// Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (document.getElementById('food-database-container')) {\n        new FoodDatabaseManager();\n    }\n});"